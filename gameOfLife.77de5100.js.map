{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"gameOfLife.77de5100.js","sourceRoot":"..","sourcesContent":["class Grid {\r\n    private gridState: { state: number, y: number, x: number, liveNeighbors: number }[][] = [];\r\n    canvas: CanvasRenderingContext2D = document.getElementById(\"myCanvas\").getContext(\"2d\");;\r\n\r\n    private set generation(val) {\r\n        document.querySelector('.generation').textContent = `GEN: ${val}`\r\n    };\r\n\r\n    private set alive(val) {\r\n        document.querySelector('.alive').textContent = `Cells Alive: ${val}`\r\n    };\r\n\r\n    private _generation = 1;\r\n    private interval;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.createGrid(x, y);\r\n        this.checkState();\r\n        this.updateCells();\r\n    }\r\n\r\n    public reset(x: number, y: number) {\r\n        this.canvas.clearRect(0, 0, 1500, 800);\r\n        this.gridState = [];\r\n        this.createGrid(x, y);\r\n        this.updateCells();\r\n        this._generation = 1;\r\n        this.generation = 1;\r\n        window.clearInterval(this.interval);\r\n    }\r\n\r\n    public start() {\r\n        this.interval = window.setInterval(() => {\r\n            this.checkState();\r\n            this.updateCells();\r\n            this._generation++;\r\n            this.generation = this._generation;\r\n        }, 100)\r\n    }\r\n\r\n    public step() {\r\n        this.checkState();\r\n        this.updateCells();\r\n        this._generation++;\r\n        this.generation = this._generation;\r\n    }\r\n\r\n    private createGrid(x: number, y: number) {\r\n        for (let i = 0; i < y; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < x; j++) {\r\n                const state = Math.floor(Math.random() * 100);\r\n                row.push({ state: state > 4 ? 0 : 1, y: i, x: j });\r\n            }\r\n            this.gridState.push(row);\r\n        }\r\n\r\n    }\r\n\r\n    private toggle(x, y, val, color?) {\r\n\r\n        if (val === 1) {\r\n            this.canvas.beginPath();\r\n            this.canvas.rect(x, y, 1, 1);\r\n            this.canvas.fillStyle = color //|| \"white\";\r\n            this.canvas.fill();\r\n        } else {\r\n            this.canvas.beginPath();\r\n            this.canvas.rect(x, y, 1, 1);\r\n            this.canvas.fillStyle = \"black\";\r\n            this.canvas.fill();\r\n        }\r\n    }\r\n\r\n    private checkState() {\r\n        let alive = 0;\r\n        for (let i = 0; i < this.gridState.length; i++) {\r\n            for (let j = 0; j < this.gridState[i].length; j++) {\r\n                const cell = this.gridState[i][j];\r\n                alive += cell.state;\r\n                let liveNeighbors = 0;\r\n\r\n                liveNeighbors += this.gridState?.[i - 1]?.[j]?.state; //top center\r\n                liveNeighbors += this.gridState?.[i - 1]?.[j - 1]?.state; //top left\r\n                liveNeighbors += this.gridState?.[i - 1]?.[j + 1]?.state; //top right\r\n                liveNeighbors += this.gridState?.[i]?.[j + 1]?.state || 0; //middle right\r\n                liveNeighbors += this.gridState?.[i]?.[j - 1]?.state || 0; //middle left\r\n                liveNeighbors += this.gridState?.[i + 1]?.[j]?.state; //bottom center\r\n                liveNeighbors += this.gridState?.[i + 1]?.[j - 1]?.state; //bottom left\r\n                liveNeighbors += this.gridState?.[i + 1]?.[j + 1]?.state; //bottom right\r\n\r\n                cell.liveNeighbors = liveNeighbors;\r\n\r\n            }\r\n        }\r\n        this.alive = alive;\r\n\r\n    }\r\n\r\n    private updateCells() {\r\n        this.canvas.clearRect(0, 0, 400, 400); //this should clear the canvas ahead of each redraw\r\n\r\n        for (let i = 0; i < this.gridState.length; i++) {\r\n            for (let j = 0; j < this.gridState[i].length; j++) {\r\n                const cell = this.gridState[i][j];\r\n\r\n                if (cell.liveNeighbors === 3 && cell.state === 0) { // cell is born again 3\r\n                    cell.state = 1;\r\n                    this.toggle(j, i, cell.state, 'red')\r\n                }\r\n\r\n                else if ((cell.liveNeighbors === 2 || cell.liveNeighbors === 3)  && cell.state) { // lives on if 2 or 3\r\n                    cell.state = 1;\r\n                    this.toggle(j, i, cell.state, 'white');\r\n                }\r\n                else if (cell.liveNeighbors > 3 && cell.state) { // overpopulation \r\n                    cell.state = 0;\r\n                    this.toggle(j, i, cell.state);\r\n                }\r\n\r\n                else if (cell.liveNeighbors < 2 && cell.state) { // less than 2 underpop\r\n                    cell.state = 0;\r\n                    this.toggle(j, i, cell.state, 'green');\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst grid = new Grid(1500, 800);\r\n\r\n\r\ndocument.getElementsByClassName('reset')[0].addEventListener('click', () => {\r\n    grid.reset(1500, 800);\r\n})\r\n\r\ndocument.getElementsByClassName('step')[0].addEventListener('click', () => {\r\n    grid.step();\r\n})\r\n\r\ndocument.getElementsByClassName('start')[0].addEventListener('click', () => {\r\n    grid.start();\r\n})\r\n\r\n"]}